name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Cloner le dépôt
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Étape 3 : Connexion à Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Étape 4 : Construire et pousser l’image Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/xtracto-io:latest

      # Étape 5 : Vérifier la connectivité réseau
      - name: Test network connectivity to VPS
        run: |
          echo "Testing connectivity to ${{ secrets.VPS_HOST }} on port 22022..."
          nc -zv ${{ secrets.VPS_HOST }} 22022 || { echo "Failed to connect to ${{ secrets.VPS_HOST }}:22022"; exit 1; }
          echo "Connectivity test passed!"

      # Étape 6 : Déployer sur le VPS via SSH avec clé
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}  # Doit être "141.94.240.141"
          username: ${{ secrets.VPS_USERNAME }}  # Doit être "ubuntu"
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}  # Clé privée
          port: 22022  # Port SSH correct
          timeout: 60s
          script_stop: true
          debug: true
          env:
          ENVIRONMENT: prod
          MONGO_URI: ${{ secrets.MONGO_URI }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
          AWS_S3_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_S3_SECRET_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
          script: |
            echo "Démarrage du script de déploiement"
            # Vérifier la connexion SSH
            echo "Tentative de connexion SSH avec l'utilisateur $USER"
            whoami || { echo "Erreur SSH : échec de l'authentification"; cat /var/log/auth.log | tail -n 10; exit 1; }

            # Connexion à Docker Hub
            echo "Connexion à Docker Hub..."
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} || { echo "Erreur Docker login"; exit 1; }
            
            # Supprimer l’ancien conteneur
            echo "Suppression de l'ancien conteneur..."
            docker stop xtracto-container || true
            docker rm xtracto-container || true
            
            # Créer le répertoire
            echo "Création du répertoire /home/ubuntu/xtracto-io..."
            mkdir -p /home/ubuntu/xtracto-io || { echo "Erreur création répertoire"; exit 1; }
            chown ubuntu:ubuntu /home/ubuntu/xtracto-io || { echo "Erreur changement propriétaire"; exit 1; }
            chmod 700 /home/ubuntu/xtracto-io || { echo "Erreur changement permissions"; exit 1; }
            
            # Créer prod.env
            echo "Création du fichier prod.env..."
            echo "ENVIRONMENT=prod" > /home/ubuntu/xtracto-io/prod.env
            echo "MONGO_URI=$MONGO_URI" >> /home/ubuntu/xtracto-io/prod.env
            echo "AWS_S3_BUCKET_NAME=$AWS_S3_BUCKET_NAME" >> /home/ubuntu/xtracto-io/prod.env
            echo "AWS_S3_ENDPOINT=$AWS_S3_ENDPOINT" >> /home/ubuntu/xtracto-io/prod.env
            echo "AWS_S3_ACCESS_KEY=$AWS_S3_ACCESS_KEY" >> /home/ubuntu/xtracto-io/prod.env
            echo "AWS_S3_SECRET_KEY=$AWS_S3_SECRET_KEY" >> /home/ubuntu/xtracto-io/prod.env
            echo "KAMELEO_HOST=192.168.122.33" >> /home/ubuntu/xtracto-io/prod.env
            echo "KAMELEO_PORT=5001" >> /home/ubuntu/xtracto-io/prod.env
            chown ubuntu:ubuntu /home/ubuntu/xtracto-io/prod.env
            chmod 600 /home/ubuntu/xtracto-io/prod.env

            # Débogage
            echo "Débogage : Contenu de prod.env..."
            cat /home/ubuntu/xtracto-io/prod.env

            # Tirer la nouvelle image
            echo "Tirage de l'image Docker..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/xtracto-io:latest || { echo "Erreur pull image"; exit 1; }
            
            # Exécuter le conteneur
            echo "Lancement du conteneur..."
            docker run -d --name xtracto-container \
              -p 8002:8002 \
              -v /home/ubuntu/xtracto-io:/app/src/environment \
              -e ENVIRONMENT=prod \
              cercina294/xtracto-io:latest || { echo "Erreur lancement conteneur"; exit 1; }
            
            # Vérifier le conteneur
            echo "Vérification du conteneur..."
            docker ps -a | grep xtracto-container || { echo "Conteneur non démarré"; exit 1; }
            echo "Déploiement terminé avec succès"
            